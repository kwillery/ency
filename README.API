--------
ency API
--------
(rough draft)

----------------
global variables
----------------
extern char *ency_filename;
 sets the Data.cxt filename explicitly (eg "/dose/ency98/Data.cxt")
extern int st_ignore_case;
 sets for most functions to ignore case when searching
extern int st_return_body;
 sets whether a function returns formatting & text. (in applicable functions that is :-)

----------
structures
----------

struct st_table
  {
    char *title;
    char *fnbase;
    struct st_table *next;
  };
a simple linked list, with titles (title) and filename base (eg /cdrom/video98/a/%fnbase%*.mov if fnbase started with an 'a'. email me for a better explanation)

struct st_ency_formatting
  {
    int bi;
    int words;
    int firstword;
    struct st_ency_formatting *next;
  };
too hard to explain for now. :)

struct ency_titles
  {
    char *title;
    char *text;
    struct st_ency_formatting *fmt;
    struct ency_titles *next;
    int err;
    long filepos;
  };
title = the title of an entry
text = the body of the entry
fmt = formatting info
next = the next returned entry
err = the error code (see encyfuncs.c for now)
filepos = position in Data.cxt of info; use get_title_at() to retrieve the info.
(eg. have (st_return_body = 0), build list using ency_find_list(), and get_title_at() to get data when clicked/selected)

---------
functions
---------

struct ency_titles *ency_find_list (char title[], int exact)
returns - struct containing encyclopedia titles & text
title: a string to search for.
exact: 0 = match a substring
       1 = match *full* string only
       2 = return *every* entry, ie ignore search string
st_ignore_case = global variable
st_return_body = global variable
(same for epis_find_list & chro_find_list)

struct ency_titles *ency_find_titles (char title[])
returns - struct containing encyclopedia titles & text. matches a substring.
title: a string to search for.
st_ignore_case = global variable
(same for epis_find_titles & chro_find_titles)

struct ency_titles *ency_get_title (char title[])
returns - struct containing encyclopedia title and text. matches exactly.
title: title to retrieve.
case *sensitive*
(same for epis_get_title & chro_get_title)

struct st_table *st_get_table (void)
returns a list of all encyclopedia (ency,epis, and chro) titles, and file name base. (eg /cdrom/video98/a/%fnbase%*.mov if fnbase started with an 'a'. email me for a better explanation)

struct ency_titles *get_title_at (long filepos)
returns title & text of entry at file position filepos
use filepos variable returned with the ency_titles structure.

---------
Robert Mibus
beemer@picknowl.com.au
http://mibus.cjb.net
---------
